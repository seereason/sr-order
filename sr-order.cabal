name:               sr-order
version:            1.9.4
cabal-version:      >= 1.10
build-type:         Simple
license:            BSD3
maintainer:         David Fox <dsf@seereason.com>
homepage:           https://github.com/seereason/th-path
bug-reports:        https://github.com/seereason/th-path/issues
stability:          experimental
synopsis:           A data structure to support lists in collaborative software
description:
  A data structure that combines a 'Map' @k@ @v@ with a list of
  @k@, representing the element order.  This means the @[k]@ can be
  reordered without invalidating any @k@ values that might be in use.
  This is useful for collaborative systems where one person might
  reorder a list while another person is modifying one of its
  elements.

library
  default-language: Haskell2010
  Default-Extensions: ConstraintKinds, CPP, DataKinds, DeriveDataTypeable, DeriveFunctor, DeriveGeneric
  Default-Extensions: FlexibleInstances, FlexibleContexts, InstanceSigs, LambdaCase, MultiParamTypeClasses
  Default-Extensions: OverloadedStrings, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving
  Default-Extensions: TupleSections, TypeApplications, TypeFamilies, TypeOperators
  hs-source-dirs: src
  ghc-options: -Wall -O
  build-depends:
    assoc-listlike,
    base >= 4.8 && < 5,
    cereal,
    containers,
    data-default,
    extra,
    lens,
    ListLike,
    pretty,
    QuickCheck,
    safecopy,
    sr-extra >= 1.77,
    vector
  exposed-modules:
    Data.Order
    Data.Order.One
    Data.Order.Ordered
    Data.Order.MapAndList
    Data.Order.MapAndVec
    Data.Order.AssocList
    Data.UList

test-suite order-tests
  default-language: Haskell2010
  type: exitcode-stdio-1.0
  ghc-options: -Wall -O
  hs-source-dirs: tests
  main-is: Main.hs
  build-depends: base, containers, extra, HUnit, lens, mtl, QuickCheck, sr-order

source-repository head
  type:     git
  location: git://github.com/seereason/sr-order.git
